# Docker
# Build and push an image to GitHub Releases and respective hub repositories
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
name: $(Date:yyyy.MMdd).$(Rev:r)

resources:
  repositories:
    - repository: self
    - repository: templates
      type: github
      name: QalaTech/pipeline-templates
      endpoint: QalaTech

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/Cli

pr:
  autoCancel: false
  branches:
    include:
      - master

variables:
  buildConfiguration: 'Release'
  runtimeIdentifiers: 'win-x64'
  projectToPublish: '**/Qala.Cli/Qala.Cli.csproj'
  buildDirectory: 'build'
  publishDirectory: 'publish'
  gitHubConnection: 'github.com_tvcosta'
  repositoryName: 'QalaTech/qala-cli'
  preReleaseVersion: ''

pool:
  vmImage: windows-latest

stages:
# Stage 1: Build and Deploy Alpha
- stage: Alpha
  displayName: "Deploy to Alpha"
  jobs:
  - job: BuildAndPublishAlpha
    displayName: "Build and Publish Alpha Executables and Installers"
    steps:

    - powershell: |
        $version = (Select-String -Path build.ps1 -Pattern 'VERSION=').Matches[0].Value -replace 'VERSION=', ''
        Write-Host "Extracted version: $version"

        Write-Host "##vso[task.setvariable variable=version]$version"

        $preReleaseVersion = "$version-alpha.$env:BUILD_BUILDID"
        Write-Host "##vso[task.setvariable variable=preReleaseVersion]$preReleaseVersion"
        Write-Host "Alpha pre-release version: $preReleaseVersion"
      displayName: 'Generate Alpha Version and Update package.json'
      workingDirectory: $(Build.SourcesDirectory)/$(buildDirectory)

    - task: UseDotNet@2
      displayName: 'Install SDK Using global.json'
      inputs:
        packageType: 'sdk'
        useGlobalJson: true
        workingDirectory: $(Pipeline.Workspace)/s

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    
    - powershell: |
        $runtimeIdentifiers = "$(runtimeIdentifiers)".Split(";")
        foreach ($rid in $runtimeIdentifiers) {
          Write-Host "Publishing Beta version for runtime: $rid"
          dotnet publish "$(projectToPublish)" -c "$(buildConfiguration)" -r $rid --self-contained true -p:PublishSingleFile=true -o "$(Pipeline.Workspace)/beta/$rid"
        }
      displayName: 'Build and publish Beta executables'
      workingDirectory: $(Build.SourcesDirectory)

    - powershell: |
        $runtimeIdentifiers = "$(runtimeIdentifiers)".Split(";")
        foreach ($rid in $runtimeIdentifiers) {
          Write-Host "Creating installer for runtime: $rid"
          & build.ps1 $rid
        }
      displayName: 'Create installers for each runtime identifiers'
      workingDirectory: $(Build.SourcesDirectory)/$(buildDirectory)

    - task: GithubRelease@1 
      displayName: 'Create GitHub Alpha Release'      
      inputs:
        gitHubConnection: '$(gitHubConnection)'
        repositoryName: '$(repositoryName)'
        target: '$(Build.SourceBranchName)'
        tagSource: 'userSpecifiedTag'
        tag: "$(preReleaseVersion)"
        isPreRelease: true
        title: 'Alpha Release $(preReleaseVersion)'   
        assets: |
          $(Build.SourcesDirectory)/$(buildDirectory)/QalaCliInstaller-$(runtimeIdentifiers).msi
          $(Build.SourcesDirectory)/$(publishDirectory)/qala.exe