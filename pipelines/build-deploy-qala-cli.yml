# Docker
# Build and push an image to GitHub Releases and respective hub repositories
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
name: $(Date:yyyy.MMdd).$(Rev:r)

resources:
  repositories:
    - repository: self
    - repository: templates
      type: github
      name: QalaTech/pipeline-templates
      endpoint: QalaTech

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/Cli

pr:
  autoCancel: false
  branches:
    include:
      - master

variables:
  buildConfiguration: 'Release'
  runtimeIdentifiers: 'win-x64 win-arm64'
  projectToPublish: '**/Qala.Cli/Qala.Cli.csproj'
  buildDirectory: '**/**/build'
  publishDirectory: '**/**/publish'
  gitHubConnection: 'github.com_tvcosta'
  repositoryName: 'QalaTech/qala-cli'
  preReleaseVersion: ''

pool:
  vmImage: ubuntu-latest

stages:
# Stage 1: Build and Deploy Alpha
- stage: Alpha
  displayName: "Deploy to Alpha"
  jobs:
  - job: BuildAndPublishAlpha
    displayName: "Build and Publish Alpha Executables and Installers"
    steps:

    - script: |
        # Extract the version from the build.sh file
        version=$(grep -Po '(?<=VERSION=).+' build.sh | tr -d "'")
        echo "Extracted version: $version"

        # Set the version as an environment variable
        echo "##vso[task.setvariable variable=version]$version"

        # Append -alpha.<BuildId> to the version
        preReleaseVersion="$version-alpha.$(Build.BuildId)"
        echo "##vso[task.setvariable variable=preReleaseVersion]$preReleaseVersion"
        echo "Alpha pre-release version: $preReleaseVersion"
      displayName: 'Generate Beta Version and Update package.json'

    - task: UseDotNet@2
      displayName: 'Install SDK Using global.json'
      inputs:
        packageType: 'sdk'
        useGlobalJson: true
        workingDirectory: $(Pipeline.Workspace)/s

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    
    - script: |
        for rid in $(runtimeIdentifiers); do
          echo "Publishing Beta version for runtime: $rid"
          dotnet publish $(projectToPublish) -c $(buildConfiguration) -r $rid --self-contained true -p:PublishSingleFile=true -o $(Pipeline.Workspace)/beta/$rid -o $(Pipeline.Workspace)
        done
      displayName: 'Build and publish Beta executables'

    - script: |
        for rid in $(runtimeIdentifiers); do
          echo "Creating installer: $pid"
          $(buildDirectory)/build.sh $rid
        done
      displayName: 'Create installers for each runtime identifiers'

    - script: |
        for rid in $(runtimeIdentifiers); do
          echo "Publishing installer: $pid"
          $(publishDirectory)/publish.sh $rid
        done
      displayName: 'Publish installers for each runtime identifiers'

    - task: GithubRelease@1 
      displayName: 'Create GitHub Alpha Release'      
      inputs:
        gitHubConnection: '$(gitHubConnection)'
        repositoryName: '$(repositoryName)'
        target: '$(Build.SourceBranchName)'
        tagSource: 'userSpecifiedTag'
        tag: "$(preReleaseVersion)"
        isPreRelease: true
        title: 'Alpha Release $(preReleaseVersion)'   
      assets: |
        $(Pipeline.Workspace)/*.exe
        $(Build.ArtifactStagingDirectory)/README.txt